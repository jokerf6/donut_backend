// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Destination {
  id               String             @id @default(uuid())
  name             String
  brief            String
  idImage          String
  tripDestinations TripDestinations[] @relation(name: "DestinationToTripDestinations")

  @@map("destinations")
}

model Trip {
  id               String             @id @default(uuid())
  name             String
  brief            String
  duration         Int
  private          Boolean
  package          Boolean
  nile             Boolean
  top              Boolean            @default(false)
  tripDays         TripDays[]         @relation(name: "TripToTripDays")
  TripsPrices      TripsPrices[]      @relation(name: "TripToTripsPrices")
  TripIncluded     TripIncluded[]     @relation(name: "TripToTripIncluded")
  TripExcluded     TripExcluded[]     @relation(name: "TripToTripExcluded")
  tripImages       TripImages[]       @relation(name: "TripToTripImages")
  tripDestinations TripDestinations[] @relation(name: "TripToTripDestinations")

  @@map("trips")
}

model TripImages {
  id      String @id @default(uuid())
  Trip    Trip   @relation(name: "TripToTripImages", fields: [tripId], references: [id], onDelete: Cascade)
  tripId  String
  idImage String
}

model TripDestinations {
  id            String      @id @default(uuid())
  Trip          Trip        @relation(name: "TripToTripDestinations", fields: [tripId], references: [id], onDelete: Cascade)
  tripId        String
  Destination   Destination @relation(name: "DestinationToTripDestinations", fields: [destinationId], references: [id], onDelete: Cascade)
  destinationId String
}

model TripDays {
  id     String @id @default(uuid())
  title  String
  brief  String
  Trip   Trip   @relation(name: "TripToTripDays", fields: [tripId], references: [id], onDelete: Cascade)
  tripId String
}

model TripsPrices {
  id           String         @id @default(uuid())
  Trip         Trip           @relation(name: "TripToTripsPrices", fields: [tripId], references: [id], onDelete: Cascade)
  tripId       String
  title        String
  priceInclude PriceInclude[] @relation(name: "PriceIncludeToTripsPrices")
}

model PriceInclude {
  id            String      @id @default(uuid())
  brief         String
  TripsPrices   TripsPrices @relation(name: "PriceIncludeToTripsPrices", fields: [tripsPricesId], references: [id], onDelete: Cascade)
  tripsPricesId String
  price         Int
}

model TripIncluded {
  id      String @id @default(uuid())
  Trip    Trip   @relation(name: "TripToTripIncluded", fields: [tripId], references: [id], onDelete: Cascade)
  tripId  String
  include String
}

model TripExcluded {
  id      String @id @default(uuid())
  Trip    Trip   @relation(name: "TripToTripExcluded", fields: [tripId], references: [id], onDelete: Cascade)
  tripId  String
  exclude String
}
